package main

import (
	"fmt"
	"strings"
)

// Что происходит с justString? : переменная создается с областью видимости по ФАЙЛУ,
//с нулевым значением типа : "", после чего в функции someFunc ей присваивается значение
//копии подстроки, созданной в createHugeString и строка justString становится доступна по всему файлу
// с значением копии

// К каким негативным последствиям он может привести и как это исправить? :
//вариант исправления представлен ниже, а негативные последствия - удержание лишней памяти

var justString string

func someFunc() {
	v := createHugeString(1 << 10)
	justString = strings.Clone(v[:100]) // вместо удержания ссылки на большУю строку,
	// хранящуюся в v, мы создаем копию ее подстроки, после чего GC может очистить ту память,
	//на которую ссылался экземпляр в переменной v
}

func main() {
	someFunc()
	fmt.Println(justString)
}

// один из множества вариантов реализации этой функции
func createHugeString(num1 int) string {
	return "1" + strings.Repeat("0", num1) + "1"
}
